/* anim8js-scrollmagic 1.0.0 - anim8 ScrollMagic by Philip Diffenderfer */
!function(t,n){"function"==typeof define&&define.amd?define(["anim8","scrollmagic"],function(e,r){return n(e,r,t)}):"object"==typeof module&&module.exports?module.exports=n(require("anim8"),require("scrollmagic"),global):n(t.anim8,t.ScrollMagic,t)}(this,function(t,n,e){function r(){}function i(t){this.init(t)}function a(t){this.init(t)}var o=t.anim8s,s=t.Class,l=t.AttrimatorMap,u=(t.animation,n.Scene.prototype),c={BEFORE:"BEFORE",DURING:"DURING",AFTER:"AFTER"};return u.setBackwards=function(t){return this.backwards=t,this},u.getAfter=function(){return this.backwards?c.BEFORE:c.AFTER},u.getBefore=function(){return this.backwards?c.AFTER:c.BEFORE},u.onProgress=function(n){var e=this,r=function(){n.call(e,e.state(),e.progress())};return e.on("progress.anim8js",r),t.requestRun(r),this},u.after=function(t){var n=new i(t),e=null;return this.onProgress(function(t,r){t!==e&&(t===this.getAfter()&&n.execute(t,e),e=t)})},u.before=function(t){var n=new i(t),e=null;return this.onProgress(function(t,r){t!==e&&(t===this.getBefore()&&n.execute(t,e),e=t)})},u.enter=function(t){var n=new i(t),e=null;return this.onProgress(function(t,r){t!==e&&(t===c.DURING&&n.execute(t,e),e=t)})},u.exit=function(t){var n=new i(t),e=null;return this.onProgress(function(t,r){t!==e&&(e&&t!==c.DURING&&n.execute(t,e),e=t)})},u.during=function(t){var n=new a(t),e=0;return this.onProgress(function(t,r){n.execute(r,e),e++})},u.animate=function(n,e,r,i,a,o,s,l){var u=Array.prototype.slice.call(arguments),n=u.shift(),c=function(){var n=u.shift(),e=t.coalesce(this.arguments[n],1),r=u.splice(0,e);if(!this.callless[n]){var i=u.shift();r.push(function(){this[i].apply(this,u)})}this[n].apply(this,r)};return this[n](c)},n.getAnimator=function(e){var r=n._util.get.elements(e);return 0===r.length?(t.log&&t.log("could not create animator for ",e),null):t(r[0])},n.getAnimators=function(e){var r=n._util.get.elements(e);return 0===r.length?(t.log&&t.log("could not create animators for ",e),null):o(r)},s.define(r,{callless:{},arguments:{callWith:1},init:function(t){this.calls=[],t.call(this)},execute:function(){for(var t=this.calls,n=0;n<t.length;n++)t[n].apply(this,arguments)},call:function(t){return this.calls.push(t),this},callWith:function(t,n){return t&&this.call(function(){n.apply(t,arguments)}),this}}),s.extend(i,r,{animator:function(t,e){return this.callWith(n.getAnimator(t),e)},animators:function(t,e){return this.callWith(n.getAnimators(t),e)},player:function(t,n){return this.callWith(t,n)},movie:function(n,e){return this.player(new t.MoviePlayer(n),e)}}),s.extend(a,r,{callless:{player:!0,movie:!0},arguments:{callWith:1,animator:1,animators:1,player:3,movie:3},addProgressAnimator:function(t){var n=t.attrimators,e=n.values,r=n.keys,i=n.timeRemaining();t.attrimators=new l,this.call(function(n,a){var o=n*i;0===a&&t.preupdate(o);for(var s=0;s<e.length;s++){var l=e[s],u=r[s],c=l.valueAtSearch(o,t.frame[u]);c!==!1&&(t.updated[u]=!0,t.frame[u]=c)}t.apply()})},animator:function(t,e){var r=n.getAnimator(t);return r&&(e.call(r),this.addProgressAnimator(r)),this},animators:function(t,e){var r=n.getAnimators(t);return r&&(e.call(r),r.each(this.addProgressAnimator,this)),this},player:function(n,e,r){var i=t.coalesce(r,0),a=t.coalesce(e,n.movie.duration());return this.call(function(t){n.apply(t*a+i,!0)})},movie:function(n,e,r){return this.player(new t.MoviePlayer(n),e,r)}}),t});
//# sourceMappingURL=anim8js-scrollmagic.min.js.map
