{"version":3,"sources":["anim8js-scrollmagic.min.js"],"names":["root","factory","define","amd","anim8","ScrollMagic","module","exports","require","global","this","window","CallBuilder","CallEventBuilder","getCalls","init","CallDuringBuilder","anim8s","Class","AttrimatorMap","Scene","animation","prototype","Events","BEFORE","DURING","AFTER","setBackwards","backwards","getAfter","getBefore","onProgress","callback","instance","invokeCallback","call","state","progress","on","requestRun","after","builder","last","execute","before","enter","exit","during","callCount","animate","type","target","subject","method","a1","a2","a3","a4","args","Array","slice","arguments","shift","targetArgCount","coalesce","targetArgs","splice","callless","push","apply","getAnimator","query","elements","_util","get","length","log","getAnimators","callWith","calls","i","context","extend","animator","animators","player","movie","MoviePlayer","addProgressAnimator","attrimatorMap","attrimators","values","properties","keys","duration","timeRemaining","now","preupdate","attrimator","prop","value","valueAtSearch","frame","updated","each","overrideDuration","overrideOffset","offset"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,QAAS,eAAgB,SAASE,EAAOC,GAC/C,MAAOJ,GAAQG,EAAOC,EAAaL,KAGZ,gBAAXM,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUN,EAAQO,QAAQ,SAAUA,QAAQ,eAAgBC,QAKnER,EAAQD,EAAKI,MAAOJ,EAAKK,YAAaL,IAExCU,KAAM,SAASN,EAAOC,EAAaM,GA2LrC,QAASC,MA8CT,QAASC,GAAiBC,GAExBJ,KAAKK,KAAMD,GAwBb,QAASE,GAAkBF,GAEzBJ,KAAKK,KAAMD,GAlQX,GAAIG,GAASb,EAAMa,OACfC,EAAQd,EAAMc,MACdC,EAAgBf,EAAMe,cAItBC,GAFahB,EAAMiB,UAEXhB,EAAYe,MAAME,WAG5BC,GACFC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QAgVP,OA7UFN,GAAMO,aAAe,SAASC,GAI5B,MAFAlB,MAAKkB,UAAYA,EAEVlB,MAGTU,EAAMS,SAAW,WAEf,MAAOnB,MAAKkB,UAAYL,EAAOC,OAASD,EAAOG,OAGjDN,EAAMU,UAAY,WAEhB,MAAOpB,MAAKkB,UAAYL,EAAOG,MAAQH,EAAOC,QAGhDJ,EAAMW,WAAa,SAASC,GAE1B,GAAIC,GAAWvB,KACXwB,EAAiB,WAEnBF,EAASG,KAAMF,EAAUA,EAASG,QAASH,EAASI,YAOtD,OAJAJ,GAASK,GAAI,mBAAoBJ,GAEjC9B,EAAMmC,WAAYL,GAEXxB,MAITU,EAAMoB,MAAQ,SAAS1B,GAErB,GAAI2B,GAAU,GAAI5B,GAAiBC,GAC/B4B,EAAO,IAEX,OAAOhC,MAAKqB,WAAW,SAASK,EAAOC,GAEjCD,IAAUM,IACRN,IAAU1B,KAAKmB,YACjBY,EAAQE,QAASP,EAAOM,GAE1BA,EAAON,MAKbhB,EAAMwB,OAAS,SAAS9B,GAEtB,GAAI2B,GAAU,GAAI5B,GAAiBC,GAC/B4B,EAAO,IAEX,OAAOhC,MAAKqB,WAAW,SAASK,EAAOC,GAEjCD,IAAUM,IACRN,IAAU1B,KAAKoB,aACjBW,EAAQE,QAASP,EAAOM,GAE1BA,EAAON,MAKbhB,EAAMyB,MAAQ,SAAS/B,GAErB,GAAI2B,GAAU,GAAI5B,GAAiBC,GAC/B4B,EAAO,IAEX,OAAOhC,MAAKqB,WAAW,SAASK,EAAOC,GAEjCD,IAAUM,IACRN,IAAUb,EAAOE,QACnBgB,EAAQE,QAASP,EAAOM,GAE1BA,EAAON,MAKbhB,EAAM0B,KAAO,SAAShC,GAEpB,GAAI2B,GAAU,GAAI5B,GAAiBC,GAC/B4B,EAAO,IAEX,OAAOhC,MAAKqB,WAAW,SAASK,EAAOC,GAEjCD,IAAUM,IACRA,GAAQN,IAAUb,EAAOE,QAC3BgB,EAAQE,QAASP,EAAOM,GAE1BA,EAAON,MAKbhB,EAAM2B,OAAS,SAASjC,GAEtB,GAAI2B,GAAU,GAAIzB,GAAkBF,GAChCkC,EAAY,CAEhB,OAAOtC,MAAKqB,WAAW,SAASK,EAAOC,GAErCI,EAAQE,QAASN,EAAUW,GAC3BA,OAKJ5B,EAAM6B,QAAU,SAASC,EAAMC,EAAQC,EAASC,EAAQC,EAAIC,EAAIC,EAAIC,GAElE,GAAIC,GAAOC,MAAMrC,UAAUsC,MAAMzB,KAAM0B,WACnCX,EAAOQ,EAAKI,QAEZhD,EAAW,WACb,GAAIqC,GAASO,EAAKI,QACdC,EAAiB3D,EAAM4D,SAAUtD,KAAKmD,UAAWV,GAAU,GAC3Dc,EAAaP,EAAKQ,OAAQ,EAAGH,EAEjC,KAAKrD,KAAKyD,SAAUhB,GAAU,CAC5B,GAAIE,GAASK,EAAKI,OAClBG,GAAWG,KAAK,WACd1D,KAAM2C,GAASgB,MAAO3D,KAAMgD,KAIhChD,KAAMyC,GAASkB,MAAO3D,KAAMuD,GAG9B,OAAOvD,MAAMwC,GAAQpC,IAIvBT,EAAYiE,YAAc,SAASC,GAEjC,GAAIC,GAAWnE,EAAYoE,MAAMC,IAAIF,SAAUD,EAE/C,OAAwB,KAApBC,EAASG,QAEPvE,EAAMwE,KAERxE,EAAMwE,IAAI,iCAAkCL,GAGvC,MAGFnE,EAAOoE,EAAU,KAG1BnE,EAAYwE,aAAe,SAASN,GAElC,GAAIC,GAAWnE,EAAYoE,MAAMC,IAAIF,SAAUD,EAE/C,OAAwB,KAApBC,EAASG,QAEPvE,EAAMwE,KAERxE,EAAMwE,IAAI,kCAAmCL,GAGxC,MAGFtD,EAAQuD,IAQjBtD,EAAMhB,OAAQU,GAEZuD,YACAN,WACEiB,SAAU,GAEZ/D,KAAM,SAASD,GAEbJ,KAAKqE,SAELjE,EAASqB,KAAMzB,OAEjBiC,QAAS,WAIP,IAAK,GAFDoC,GAAQrE,KAAKqE,MAERC,EAAI,EAAGA,EAAID,EAAMJ,OAAQK,IAEhCD,EAAOC,GAAIX,MAAO3D,KAAMmD,YAG5B1B,KAAM,SAASH,GAIb,MAFAtB,MAAKqE,MAAMX,KAAMpC,GAEVtB,MAEToE,SAAU,SAASG,EAASnE,GAU1B,MARImE,IAEFvE,KAAKyB,KAAK,WAERrB,EAASuD,MAAOY,EAASpB,aAItBnD,QAUXQ,EAAMgE,OAAQrE,EAAkBD,GAE9BuE,SAAU,SAASZ,EAAOzD,GAExB,MAAOJ,MAAKoE,SAAUzE,EAAYiE,YAAaC,GAASzD,IAE1DsE,UAAW,SAASb,EAAOzD,GAEzB,MAAOJ,MAAKoE,SAAUzE,EAAYwE,aAAcN,GAASzD,IAE3DuE,OAAQ,SAASA,EAAQvE,GAEvB,MAAOJ,MAAKoE,SAAUO,EAAQvE,IAEhCwE,MAAO,SAASA,EAAOxE,GAErB,MAAOJ,MAAK2E,OAAQ,GAAIjF,GAAMmF,YAAaD,GAASxE,MAUxDI,EAAMgE,OAAQlE,EAAmBJ,GAE/BuD,UACEkB,QAAQ,EACRC,OAAO,GAETzB,WACEiB,SAAU,EACVK,SAAU,EACVC,UAAW,EACXC,OAAQ,EACRC,MAAO,GAETE,oBAAqB,SAASL,GAE5B,GAAIM,GAAgBN,EAASO,YACzBA,EAAcD,EAAcE,OAC5BC,EAAaH,EAAcI,KAC3BC,EAAWL,EAAcM,eAE7BZ,GAASO,YAAc,GAAIvE,GAE3BT,KAAKyB,KAAK,SAASE,EAAUW,GAE3B,GAAIgD,GAAM3D,EAAWyD,CAEH,KAAd9C,GACFmC,EAASc,UAAWD,EAGtB,KAAK,GAAIhB,GAAI,EAAGA,EAAIU,EAAYf,OAAQK,IAAK,CAC3C,GAAIkB,GAAaR,EAAaV,GAC1BmB,EAAOP,EAAYZ,GACnBoB,EAAQF,EAAWG,cAAeL,EAAKb,EAASmB,MAAOH,GACvDC,MAAU,IACZjB,EAASoB,QAASJ,IAAS,EAC3BhB,EAASmB,MAAOH,GAASC,GAI7BjB,EAASd,WAGbc,SAAU,SAASZ,EAAOzD,GAExB,GAAIqE,GAAW9E,EAAYiE,YAAYC,EASvC,OAPIY,KAEFrE,EAASqB,KAAMgD,GAEfzE,KAAK8E,oBAAqBL,IAGrBzE,MAET0E,UAAW,SAASb,EAAOzD,GAEzB,GAAIsE,GAAY/E,EAAYwE,aAAaN,EASzC,OAPIa,KAEFtE,EAASqB,KAAMiD,GAEfA,EAAUoB,KAAM9F,KAAK8E,oBAAqB9E,OAGrCA,MAET2E,OAAQ,SAASA,EAAQoB,EAAkBC,GAEzC,GAAIC,GAASvG,EAAM4D,SAAU0C,EAAgB,GACzCZ,EAAW1F,EAAM4D,SAAUyC,EAAkBpB,EAAOC,MAAMQ,WAE9D,OAAOpF,MAAKyB,KAAK,SAASE,GAExBgD,EAAOhB,MAAOhC,EAAWyD,EAAWa,GAAQ,MAGhDrB,MAAO,SAASA,EAAOmB,EAAkBC,GAEvC,MAAOhG,MAAK2E,OAAQ,GAAIjF,GAAMmF,YAAaD,GAASmB,EAAkBC,MAMjEtG","file":"anim8js-scrollmagic.min.js","sourcesContent":["/* anim8js-scrollmagic 1.0.0 - anim8 ScrollMagic by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['anim8', 'scrollmagic'], function(anim8, ScrollMagic) { // jshint ignore:line\n      return factory(anim8, ScrollMagic, root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('anim8'), require('scrollmagic'), global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    factory(root.anim8, root.ScrollMagic, root);\n  }\n}(this, function(anim8, ScrollMagic, window)\n{\n\n  var anim8s = anim8.anim8s;\n  var Class = anim8.Class;\n  var AttrimatorMap = anim8.AttrimatorMap;\n\n  var $animation = anim8.animation;\n\n  var Scene = ScrollMagic.Scene.prototype;\n\n\nvar Events = {\n  BEFORE: 'BEFORE',\n  DURING: 'DURING',\n  AFTER: 'AFTER'\n};\n\nScene.setBackwards = function(backwards)\n{\n  this.backwards = backwards;\n\n  return this;\n};\n\nScene.getAfter = function()\n{\n  return this.backwards ? Events.BEFORE : Events.AFTER;\n};\n\nScene.getBefore = function()\n{\n  return this.backwards ? Events.AFTER : Events.BEFORE;\n};\n\nScene.onProgress = function(callback)\n{\n  var instance = this;\n  var invokeCallback = function()\n  {\n    callback.call( instance, instance.state(), instance.progress() );\n  };\n\n  instance.on( 'progress.anim8js', invokeCallback );\n\n  anim8.requestRun( invokeCallback );\n\n  return this;\n};\n\n\nScene.after = function(getCalls)\n{\n  var builder = new CallEventBuilder(getCalls);\n  var last = null;\n\n  return this.onProgress(function(state, progress)\n  {\n    if (state !== last) {\n      if (state === this.getAfter()) {\n        builder.execute( state, last );\n      }\n      last = state;\n    }\n  });\n};\n\nScene.before = function(getCalls)\n{\n  var builder = new CallEventBuilder(getCalls);\n  var last = null;\n\n  return this.onProgress(function(state, progress)\n  {\n    if (state !== last) {\n      if (state === this.getBefore()) {\n        builder.execute( state, last );\n      }\n      last = state;\n    }\n  });\n};\n\nScene.enter = function(getCalls)\n{\n  var builder = new CallEventBuilder(getCalls);\n  var last = null;\n\n  return this.onProgress(function(state, progress)\n  {\n    if (state !== last) {\n      if (state === Events.DURING) {\n        builder.execute( state, last );\n      }\n      last = state;\n    }\n  });\n};\n\nScene.exit = function(getCalls)\n{\n  var builder = new CallEventBuilder(getCalls);\n  var last = null;\n\n  return this.onProgress(function(state, progress)\n  {\n    if (state !== last) {\n      if (last && state !== Events.DURING) {\n        builder.execute( state, last );\n      }\n      last = state;\n    }\n  });\n};\n\nScene.during = function(getCalls)\n{\n  var builder = new CallDuringBuilder(getCalls);\n  var callCount = 0;\n\n  return this.onProgress(function(state, progress)\n  {\n    builder.execute( progress, callCount );\n    callCount++;\n  });\n};\n\n\nScene.animate = function(type, target, subject, method, a1, a2, a3, a4)\n{\n  var args = Array.prototype.slice.call( arguments );\n  var type = args.shift();\n\n  var getCalls = function() {\n    var target = args.shift();\n    var targetArgCount = anim8.coalesce( this.arguments[ target ], 1 );\n    var targetArgs = args.splice( 0, targetArgCount );\n\n    if (!this.callless[ target ]) {\n      var method = args.shift();\n      targetArgs.push(function() {\n        this[ method ].apply( this, args );\n      });\n    }\n\n    this[ target ].apply( this, targetArgs );\n  };\n\n  return this[ type ]( getCalls );\n};\n\n\nScrollMagic.getAnimator = function(query)\n{\n  var elements = ScrollMagic._util.get.elements( query );\n\n  if (elements.length === 0)\n  {\n    if (anim8.log)\n    {\n      anim8.log('could not create animator for ', query);\n    }\n\n    return null;\n  }\n\n  return anim8( elements[ 0 ] );\n};\n\nScrollMagic.getAnimators = function(query)\n{\n  var elements = ScrollMagic._util.get.elements( query );\n\n  if (elements.length === 0)\n  {\n    if (anim8.log)\n    {\n      anim8.log('could not create animators for ', query);\n    }\n\n    return null;\n  }\n\n  return anim8s( elements );\n};\n\n\nfunction CallBuilder()\n{\n}\n\nClass.define( CallBuilder,\n{\n  callless: {},\n  arguments: {\n    callWith: 1\n  },\n  init: function(getCalls)\n  {\n    this.calls = [];\n\n    getCalls.call( this );\n  },\n  execute: function()\n  {\n    var calls = this.calls;\n\n    for (var i = 0; i < calls.length; i++)\n    {\n      calls[ i ].apply( this, arguments );\n    }\n  },\n  call: function(callback)\n  {\n    this.calls.push( callback );\n\n    return this;\n  },\n  callWith: function(context, getCalls)\n  {\n    if (context)\n    {\n      this.call(function()\n      {\n        getCalls.apply( context, arguments );\n      });\n    }\n\n    return this;\n  }\n});\n\n\nfunction CallEventBuilder(getCalls)\n{\n  this.init( getCalls );\n}\n\nClass.extend( CallEventBuilder, CallBuilder,\n{\n  animator: function(query, getCalls)\n  {\n    return this.callWith( ScrollMagic.getAnimator( query ), getCalls );\n  },\n  animators: function(query, getCalls)\n  {\n    return this.callWith( ScrollMagic.getAnimators( query ), getCalls );\n  },\n  player: function(player, getCalls)\n  {\n    return this.callWith( player, getCalls );\n  },\n  movie: function(movie, getCalls)\n  {\n    return this.player( new anim8.MoviePlayer( movie ), getCalls );\n  }\n});\n\n\nfunction CallDuringBuilder(getCalls)\n{\n  this.init( getCalls );\n}\n\nClass.extend( CallDuringBuilder, CallBuilder,\n{\n  callless: {\n    player: true,\n    movie: true\n  },\n  arguments: {\n    callWith: 1,\n    animator: 1,\n    animators: 1,\n    player: 3,\n    movie: 3\n  },\n  addProgressAnimator: function(animator)\n  {\n    var attrimatorMap = animator.attrimators;\n    var attrimators = attrimatorMap.values;\n    var properties = attrimatorMap.keys;\n    var duration = attrimatorMap.timeRemaining();\n\n    animator.attrimators = new AttrimatorMap();\n\n    this.call(function(progress, callCount)\n    {\n      var now = progress * duration;\n\n      if (callCount === 0) {\n        animator.preupdate( now );\n      }\n\n      for (var i = 0; i < attrimators.length; i++) {\n        var attrimator = attrimators[ i ];\n        var prop = properties[ i ];\n        var value = attrimator.valueAtSearch( now, animator.frame[ prop ] );\n        if (value !== false) {\n          animator.updated[ prop ] = true;\n          animator.frame[ prop ] = value;\n        }\n      }\n\n      animator.apply();\n    });\n  },\n  animator: function(query, getCalls)\n  {\n    var animator = ScrollMagic.getAnimator(query);\n\n    if (animator)\n    {\n      getCalls.call( animator );\n\n      this.addProgressAnimator( animator );\n    }\n\n    return this;\n  },\n  animators: function(query, getCalls)\n  {\n    var animators = ScrollMagic.getAnimators(query);\n\n    if (animators)\n    {\n      getCalls.call( animators );\n\n      animators.each( this.addProgressAnimator, this );\n    }\n\n    return this;\n  },\n  player: function(player, overrideDuration, overrideOffset)\n  {\n    var offset = anim8.coalesce( overrideOffset, 0 );\n    var duration = anim8.coalesce( overrideDuration, player.movie.duration() );\n\n    return this.call(function(progress)\n    {\n      player.apply( progress * duration + offset, true );\n    });\n  },\n  movie: function(movie, overrideDuration, overrideOffset)\n  {\n    return this.player( new anim8.MoviePlayer( movie ), overrideDuration, overrideOffset );\n  }\n});\n\n\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}